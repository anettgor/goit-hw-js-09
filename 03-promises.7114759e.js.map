{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,QAC9BC,EAAaH,EAAKE,cAAc,kBAChCE,EAAYJ,EAAKE,cAAc,iBAC/BG,EAAcL,EAAKE,cAAc,mBAEvC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACT,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,QAAQC,IAAI,iBAAkBJ,GAC1BA,EACFH,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXKR,EAAKE,cAAc,mBAe3BgB,iBAAiB,SAASC,IAClCA,EAAEC,iBACF,IAAIC,EAAaC,SAASnB,EAAWoB,OACjCC,EAAOF,SAASlB,EAAUmB,OAC1BE,EAASH,SAASjB,EAAYkB,OAElC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAC3BpB,EAAcoB,EAAGL,GACdM,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAqBvB,QAAiBC,MAAU,IAGnDuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,EAAA9B,GAAS+B,OAAOG,QACd,sBAAoBzB,QAAeC,MAAU,IAGnDa,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('form');\nconst delayInput = form.querySelector('[name=\"delay\"]');\nconst stepInput = form.querySelector('[name=\"step\"]');\nconst amountInput = form.querySelector('[name=\"amount\"]');\nconst submitBtn = form.querySelector('[type=\"submit\"]');\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      console.log('ShouldResolve:', shouldResolve);\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nsubmitBtn.addEventListener('click', e => {\n  e.preventDefault();\n  let firstDelay = parseInt(delayInput.value);\n  let step = parseInt(stepInput.value);\n  let amount = parseInt(amountInput.value);\n\n  for (let i = 0; i <= amount; i++) {\n    createPromise(i, firstDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    firstDelay += step;\n  }\n});\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","shouldResolve","Math","random","console","log","addEventListener","e","preventDefault","firstDelay","parseInt","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.7114759e.js.map"}